TODO:
* Z80 core GPL compliance (note changes and date of change)
* Too many global variables?
* Not enough modularity?
* No error checking (esp. checking to see if files aren't found or are wrong dimensions/bpp/size in bytes)
* Z80 code gives lots of warnings in VC++
* Make SDL_mixer optional instead of required
* Use OpenGL instead of SDL for video (higher performance)?
* We don't reload graphics when toggling fullscreen (fullscreen mode may have different pixel format)
* Game assumes you're launching it from CWD (especially unlikely to be true on Unix)
* dkongjp has a different gfx ROM from dkong. What is the difference?
* CRC check ROMs
* Donkey Kong Junior? Mario Bros.?
* Does WIN32 get #define'd on MinGW? What about Cygwin?
* Game occasionally (but rarely) crashes on exit (by clicking X in corner of SDL window)
* Move source to a 'src' directory?
* Optimization flags?
* Get palette colors from the PROMs?
* Exception handling?
* Does cmake need to be told about header files?
* Use RAII/scope guards for locking surfaces?
* Find out differences in Z80 core between Desmume, VBA, etc.


Sound code:
* Hammer grab sound plays only once, not twice, when Mario picks up hammer. (This is because the game spams the "score" sound register for 64 frames, expecting the sound to play again after it finishes the first time.)


Regarding skipping music:
<EvanR> if its just music, you can create your own music callback
<EvanR> then it will loop

Using Mix_Chunk instead of Mix_Music also solves the problem, but I don't know if I want to go in that direction, since the music could get pretty big if the user has a lot of big OGGs.


Palette swapping:
* Girders (red in barrels, orange in pie factory)
* Rivet girders (flash on title screen)
* Ladders (cyan in barrels, orange in rivets, white in pie factory)
* Bonus timer (outer color same as girder color)
* Vertical bar (holds up girder in rivet stage; elevator shaft in elevator stage)
* Text
* "Help!" (color same as ladder color)
